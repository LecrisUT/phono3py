"""Test for imag_free_energy.py."""
import numpy as np
import pytest

from phono3py import Phono3py


def test_imag_self_energy_at_bands(si_pbesol: Phono3py):
    """Imaginary part of self energy spectrum of Si.

    * at frequencies of band indices.

    """
    si_pbesol.mesh_numbers = [9, 9, 9]
    si_pbesol.init_phph_interaction()
    if si_pbesol._make_r0_average:
        gammas_ref = [
            [0.00021545, 0.00021545, 0.00084089, 0.04680453, 0.04391903, 0.04391903],
            [0.00382068, 0.00496605, 0.02735089, 0.01380481, 0.04135883, 0.029786],
        ]
    else:
        gammas_ref = [
            [0.00021669, 0.00021669, 0.00084313, 0.04670244, 0.04380733, 0.04380733],
            [0.00382813, 0.0049497, 0.02727924, 0.01382784, 0.04133946, 0.02980282],
        ]
    for i, grgp in enumerate((1, 103)):
        _, gammas = si_pbesol.run_imag_self_energy(
            [
                si_pbesol.grid.grg2bzg[grgp],
            ],
            [
                300,
            ],
            frequency_points_at_bands=True,
        )
        # print(gammas.ravel())
        np.testing.assert_allclose(gammas.ravel(), gammas_ref[i], rtol=0, atol=1e-2)


def test_imag_self_energy_at_bands_detailed(si_pbesol: Phono3py):
    """Imaginary part of self energy spectrum of Si.

    * at frequencies of band indices.
    * contribution from each triplet is returned.

    """
    si_pbesol.mesh_numbers = [9, 9, 9]
    si_pbesol.init_phph_interaction()
    _, gammas, detailed_gammas = si_pbesol.run_imag_self_energy(
        si_pbesol.grid.grg2bzg[[1, 103]],
        [
            300,
        ],
        frequency_points_at_bands=True,
        keep_gamma_detail=True,
    )

    weights_1 = [
        2,
        2,
        2,
        2,
        1,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        12,
        12,
        12,
        12,
        6,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        6,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        6,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        12,
        6,
    ]
    weights_103 = [2] * 364 + [1]

    gammas_1_ref = gammas[:, :, 0].ravel()
    gammas_103_ref = gammas[:, :, 1].ravel()
    gammas_1 = np.dot(weights_1, detailed_gammas[0][0, 0].sum(axis=-1).sum(axis=-1))
    gammas_103 = np.dot(weights_103, detailed_gammas[1][0, 0].sum(axis=-1).sum(axis=-1))
    np.testing.assert_allclose(
        gammas_1[:2].sum(), gammas_1_ref[:2].sum(), rtol=0, atol=1e-2
    )
    np.testing.assert_allclose(
        gammas_1[-2:].sum(), gammas_1_ref[-2:].sum(), rtol=0, atol=1e-2
    )
    np.testing.assert_allclose(gammas_1[2:4], gammas_1_ref[2:4], rtol=0, atol=1e-2)
    np.testing.assert_allclose(gammas_103, gammas_103_ref, rtol=0, atol=1e-2)


@pytest.mark.parametrize("with_given_freq_points", [False, True])
def test_imag_self_energy_npoints(si_pbesol: Phono3py, with_given_freq_points: bool):
    """Imaginary part of self energy spectrum of Si.

    * at 10 frequency points sampled uniformly.

    """
    if si_pbesol._make_r0_average:
        ref_gammas = [
            [
                0.00000000,
                0.00051598,
                0.00194418,
                0.00614691,
                0.00162083,
                0.00970749,
                0.00353066,
                0.00731984,
                0.00162686,
                0.00000000,
            ],
            [
                0.00000000,
                0.00051598,
                0.00194418,
                0.00614691,
                0.00162083,
                0.00970749,
                0.00353066,
                0.00731984,
                0.00162686,
                0.00000000,
            ],
            [
                0.00000000,
                0.00088565,
                0.00656764,
                0.00867634,
                0.00170325,
                0.01690743,
                0.01349900,
                0.02901140,
                0.01273512,
                0.00000000,
            ],
            [
                0.00000000,
                0.01918681,
                0.05297584,
                0.04305304,
                0.02805370,
                0.04377473,
                0.06225918,
                0.50035489,
                0.27502450,
                0.00000000,
            ],
            [
                0.00000000,
                0.02066231,
                0.04931179,
                0.04213945,
                0.02907118,
                0.05228489,
                0.03443653,
                0.50724519,
                0.28034918,
                0.00000000,
            ],
            [
                0.00000000,
                0.02066231,
                0.04931179,
                0.04213945,
                0.02907118,
                0.05228489,
                0.03443653,
                0.50724519,
                0.28034918,
                0.00000000,
            ],
            [
                -0.00000000,
                0.00231716,
                0.00355335,
                0.03489072,
                0.00709568,
                0.02008815,
                0.01662680,
                0.02924063,
                0.01043312,
                0.00000000,
            ],
            [
                0.00000000,
                0.00262906,
                0.00381874,
                0.02768903,
                0.00826331,
                0.01980611,
                0.01719952,
                0.03277970,
                0.01787071,
                0.00000000,
            ],
            [
                0.00000000,
                0.00525958,
                0.00888770,
                0.04924217,
                0.01406585,
                0.03184290,
                0.05631297,
                0.06688341,
                0.08304821,
                0.00000000,
            ],
            [
                0.00000000,
                0.02085635,
                0.02799420,
                0.05086482,
                0.02056579,
                0.04031371,
                0.09202142,
                0.25428652,
                0.26568153,
                0.00000000,
            ],
            [
                0.00000000,
                0.02212879,
                0.03162412,
                0.04661931,
                0.03069041,
                0.04365270,
                0.05690000,
                0.46061428,
                0.32499384,
                0.00000000,
            ],
            [
                -0.00000000,
                0.02358234,
                0.02866248,
                0.04372230,
                0.02373747,
                0.04001464,
                0.06215455,
                0.42344655,
                0.31899128,
                0.00000000,
            ],
        ]
    else:
        ref_gammas = [
            [
                0.00000000,
                0.00054081,
                0.00194158,
                0.00622583,
                0.00163585,
                0.00978467,
                0.00355448,
                0.00731102,
                0.00162748,
                0.00000000,
            ],
            [
                0.00000000,
                0.00054081,
                0.00194158,
                0.00622583,
                0.00163585,
                0.00978467,
                0.00355448,
                0.00731102,
                0.00162748,
                0.00000000,
            ],
            [
                0.00000000,
                0.00088422,
                0.00654596,
                0.00883017,
                0.00171625,
                0.01684764,
                0.01350382,
                0.02897440,
                0.01279260,
                0.00000000,
            ],
            [
                0.00000000,
                0.01917970,
                0.05310768,
                0.04276705,
                0.02790667,
                0.04371058,
                0.06226158,
                0.50091341,
                0.27495914,
                0.00000000,
            ],
            [
                0.00000000,
                0.02063842,
                0.04941879,
                0.04187151,
                0.02892275,
                0.05230939,
                0.03442249,
                0.50771368,
                0.28022971,
                0.00000000,
            ],
            [
                0.00000000,
                0.02063842,
                0.04941879,
                0.04187151,
                0.02892275,
                0.05230939,
                0.03442249,
                0.50771368,
                0.28022971,
                0.00000000,
            ],
            [
                -0.00000000,
                0.00232330,
                0.00355773,
                0.03475333,
                0.00710164,
                0.02016255,
                0.01658460,
                0.02925112,
                0.01045985,
                0.00000000,
            ],
            [
                0.00000000,
                0.00262851,
                0.00381385,
                0.02766221,
                0.00817568,
                0.01988199,
                0.01723836,
                0.03281213,
                0.01786515,
                0.00000000,
            ],
            [
                0.00000000,
                0.00524095,
                0.00883733,
                0.04932620,
                0.01398277,
                0.03176217,
                0.05637511,
                0.06680493,
                0.08310406,
                0.00000000,
            ],
            [
                0.00000000,
                0.02088739,
                0.02810689,
                0.05111945,
                0.02050179,
                0.04033510,
                0.09200282,
                0.25409682,
                0.26587691,
                0.00000000,
            ],
            [
                0.00000000,
                0.02212442,
                0.03164236,
                0.04650615,
                0.03066326,
                0.04361261,
                0.05691939,
                0.46020445,
                0.32500277,
                0.00000000,
            ],
            [
                -0.00000000,
                0.02359466,
                0.02879263,
                0.04348834,
                0.02377393,
                0.04001628,
                0.06220649,
                0.42322997,
                0.31900494,
                0.00000000,
            ],
        ]

    ref_freq_points = [
        0.00000000,
        3.41024688,
        6.82049376,
        10.23074063,
        13.64098751,
        17.05123439,
        20.46148127,
        23.87172814,
        27.28197502,
        30.69222190,
    ]

    si_pbesol.mesh_numbers = [9, 9, 9]
    si_pbesol.init_phph_interaction()
    if with_given_freq_points:
        fpoints, gammas = si_pbesol.run_imag_self_energy(
            si_pbesol.grid.grg2bzg[[1, 103]],
            [
                300,
            ],
            frequency_points=ref_freq_points,
        )
    else:
        fpoints, gammas = si_pbesol.run_imag_self_energy(
            si_pbesol.grid.grg2bzg[[1, 103]],
            [
                300,
            ],
            num_frequency_points=10,
        )

    # print(",".join([f"{val:.8f}" for val in fpoints]))
    # for line in gammas.reshape(-1, 10):
    #     print("[", ",".join([f"{val:.8f}" for val in line]), "],")

    np.testing.assert_allclose(ref_gammas, gammas.reshape(-1, 10), rtol=0, atol=1e-2)
    np.testing.assert_allclose(ref_freq_points, fpoints.ravel(), rtol=0, atol=1e-5)


def test_imag_self_energy_npoints_with_sigma(si_pbesol: Phono3py):
    """Imaginary part of self energy spectrum of Si.

    * at 10 frequency points sampled uniformly.
    * with smearing method

    """
    ref_freq_points = [
        0.00000000,
        3.45491354,
        6.90982709,
        10.36474063,
        13.81965418,
        17.27456772,
        20.72948127,
        24.18439481,
        27.63930835,
        31.09422190,
    ]
    if si_pbesol._make_r0_average:
        ref_gammas = [
            [
                0.00000000,
                0.00041506,
                0.00143965,
                0.00825963,
                0.00202149,
                0.00732327,
                0.00389552,
                0.00641912,
                0.00297687,
                0.00000000,
            ],
            [
                0.00000000,
                0.00041506,
                0.00143965,
                0.00825963,
                0.00202149,
                0.00732327,
                0.00389552,
                0.00641912,
                0.00297687,
                0.00000000,
            ],
            [
                0.00000000,
                0.00072570,
                0.00711098,
                0.00931416,
                0.00202686,
                0.01269001,
                0.01155621,
                0.02333201,
                0.11729894,
                0.00000000,
            ],
            [
                0.00000000,
                0.02248240,
                0.05500631,
                0.04347097,
                0.02239399,
                0.02385814,
                0.05584392,
                0.43672628,
                0.84641772,
                0.00000000,
            ],
            [
                0.00000000,
                0.01984028,
                0.04361189,
                0.04446874,
                0.03551081,
                0.03076592,
                0.04043030,
                0.48284919,
                0.80928445,
                0.00000000,
            ],
            [
                0.00000000,
                0.01984028,
                0.04361189,
                0.04446874,
                0.03551081,
                0.03076592,
                0.04043030,
                0.48284919,
                0.80928445,
                0.00000000,
            ],
            [
                0.00000000,
                0.00224317,
                0.00332166,
                0.03220828,
                0.00890233,
                0.02594953,
                0.01011824,
                0.02358940,
                0.01242541,
                0.00000000,
            ],
            [
                0.00000000,
                0.00288804,
                0.00431127,
                0.02580087,
                0.00947799,
                0.02570167,
                0.01128341,
                0.03736793,
                0.02378157,
                0.00000000,
            ],
            [
                0.00000000,
                0.00557189,
                0.00977275,
                0.04893809,
                0.01551857,
                0.04776112,
                0.05419744,
                0.06642549,
                0.20193208,
                0.00000000,
            ],
            [
                0.00000000,
                0.02259670,
                0.02942983,
                0.04584053,
                0.02090207,
                0.04959725,
                0.10131908,
                0.22198722,
                0.49220668,
                0.00000000,
            ],
            [
                0.00000000,
                0.02347494,
                0.03243416,
                0.04077649,
                0.03005826,
                0.04951265,
                0.06012485,
                0.41587615,
                0.52890177,
                0.00000000,
            ],
            [
                0.00000000,
                0.02646648,
                0.03039681,
                0.04291884,
                0.02722076,
                0.03705847,
                0.08995939,
                0.32617655,
                0.50774483,
                0.00000000,
            ],
        ]
    else:
        ref_gammas = [
            [
                0.00000000,
                0.00046029,
                0.00143860,
                0.00826301,
                0.00203560,
                0.00746195,
                0.00389360,
                0.00642767,
                0.00291728,
                0.00000000,
            ],
            [
                0.00000000,
                0.00046029,
                0.00143860,
                0.00826301,
                0.00203560,
                0.00746195,
                0.00389360,
                0.00642767,
                0.00291728,
                0.00000000,
            ],
            [
                0.00000000,
                0.00071545,
                0.00715263,
                0.00950813,
                0.00207048,
                0.01268396,
                0.01154058,
                0.02338437,
                0.11718631,
                0.00000000,
            ],
            [
                0.00000000,
                0.02242054,
                0.05481156,
                0.04304817,
                0.02226551,
                0.02380441,
                0.05602348,
                0.43710790,
                0.84620157,
                0.00000000,
            ],
            [
                0.00000000,
                0.01975435,
                0.04396936,
                0.04400210,
                0.03531839,
                0.03074892,
                0.04034627,
                0.48306584,
                0.80881708,
                0.00000000,
            ],
            [
                0.00000000,
                0.01975435,
                0.04396936,
                0.04400210,
                0.03531839,
                0.03074892,
                0.04034627,
                0.48306584,
                0.80881708,
                0.00000000,
            ],
            [
                0.00000000,
                0.00224835,
                0.00330612,
                0.03210358,
                0.00888799,
                0.02593986,
                0.01005313,
                0.02358822,
                0.01240071,
                0.00000000,
            ],
            [
                0.00000000,
                0.00288498,
                0.00430468,
                0.02583317,
                0.00936948,
                0.02559304,
                0.01125217,
                0.03737522,
                0.02372173,
                0.00000000,
            ],
            [
                0.00000000,
                0.00554574,
                0.00975355,
                0.04906091,
                0.01541312,
                0.04760672,
                0.05423798,
                0.06633807,
                0.20217767,
                0.00000000,
            ],
            [
                0.00000000,
                0.02261273,
                0.02954525,
                0.04609366,
                0.02079095,
                0.04958274,
                0.10135670,
                0.22190369,
                0.49239981,
                0.00000000,
            ],
            [
                0.00000000,
                0.02349047,
                0.03242621,
                0.04064508,
                0.03001210,
                0.04942973,
                0.06021902,
                0.41562743,
                0.52883866,
                0.00000000,
            ],
            [
                0.00000000,
                0.02647988,
                0.03052183,
                0.04250035,
                0.02721119,
                0.03703768,
                0.09005459,
                0.32601504,
                0.50769018,
                0.00000000,
            ],
        ]

    si_pbesol.sigmas = [
        0.1,
    ]
    si_pbesol.mesh_numbers = [9, 9, 9]
    si_pbesol.init_phph_interaction()
    fpoints, gammas = si_pbesol.run_imag_self_energy(
        si_pbesol.grid.grg2bzg[[1, 103]],
        [
            300,
        ],
        num_frequency_points=10,
    )

    # print(",".join([f"{val:.8f}" for val in fpoints]))
    # for line in gammas.reshape(-1, 10):
    #     print("[", ",".join([f"{val:.8f}" for val in line]), "],")

    np.testing.assert_allclose(ref_gammas, gammas.reshape(-1, 10), rtol=0, atol=1e-2)
    np.testing.assert_allclose(ref_freq_points, fpoints.ravel(), rtol=0, atol=1e-5)
    si_pbesol.sigmas = None


def test_imag_self_energy_detailed(si_pbesol: Phono3py):
    """Imaginary part of self energy spectrum of Si.

    * specified frquency points
    * contribution from each triplet is returned.

    """
    detailed_gamma = [
        0.00000000,
        0.00653193,
        0.02492913,
        0.01682092,
        0.01001680,
        0.02181888,
        0.01858641,
        0.16208762,
        0.09598706,
        0.00000000,
    ]
    freq_points = [
        0.00000000,
        3.41024688,
        6.82049376,
        10.23074063,
        13.64098751,
        17.05123439,
        20.46148127,
        23.87172814,
        27.28197502,
        30.69222190,
    ]
    si_pbesol.mesh_numbers = [9, 9, 9]
    si_pbesol.init_phph_interaction()
    _, _, _detailed_gammas = si_pbesol.run_imag_self_energy(
        si_pbesol.grid.grg2bzg[
            [
                1,
            ]
        ],
        [
            300,
        ],
        frequency_points=freq_points,
        keep_gamma_detail=True,
    )
    np.testing.assert_allclose(
        detailed_gamma,
        _detailed_gammas[0][0, 0].sum(axis=(1, 2, 3, 4)),
        rtol=0,
        atol=1e-2,
    )


@pytest.mark.parametrize("scattering_class", [1, 2])
def test_imag_self_energy_scat_classes(si_pbesol: Phono3py, scattering_class: int):
    """Imaginary part of self energy spectrum of Si.

    * specified frquency points
    * scattering event class 1

    """
    gammas_classes = [
        [
            0.00000000,
            0.00000000,
            0.00000000,
            -0.00000000,
            0.00000000,
            0.00000000,
            0.00053387,
            0.00053387,
            0.00086230,
            0.01894313,
            0.02034210,
            0.02034210,
            0.00155506,
            0.00155506,
            0.00260125,
            0.01821681,
            0.01820381,
            0.01820381,
            0.00571765,
            0.00571765,
            0.00544460,
            0.01325570,
            0.01118428,
            0.01118428,
            0.00016153,
            0.00016153,
            0.00032679,
            0.00020002,
            0.00020927,
            0.00020927,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00233036,
            0.00264690,
            0.00525130,
            0.02096414,
            0.02200915,
            0.02347515,
            0.00297698,
            0.00348529,
            0.00638118,
            0.01776255,
            0.02740917,
            0.02217207,
            0.03234423,
            0.02580162,
            0.03682891,
            0.03904463,
            0.01942315,
            0.02072384,
            0.00004097,
            0.00005101,
            0.00007457,
            0.00003508,
            0.00004210,
            0.00003803,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
        ],
        [
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000728,
            0.00000728,
            0.00002201,
            0.00022624,
            0.00028946,
            0.00028946,
            0.00038736,
            0.00038736,
            0.00415534,
            0.03667993,
            0.03240766,
            0.03240766,
            0.00050274,
            0.00050274,
            0.00337024,
            0.02935928,
            0.03053801,
            0.03053801,
            0.00146473,
            0.00146473,
            0.00140248,
            0.02775086,
            0.02871662,
            0.02871662,
            0.00979262,
            0.00979262,
            0.01700920,
            0.04388280,
            0.05231049,
            0.05231049,
            0.00355424,
            0.00355424,
            0.01351094,
            0.06235333,
            0.03437465,
            0.03437465,
            0.00731397,
            0.00731397,
            0.02896588,
            0.50067605,
            0.50779324,
            0.50779324,
            0.00161440,
            0.00161440,
            0.01263256,
            0.27319333,
            0.27917018,
            0.27917018,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00057618,
            0.00033051,
            0.00240702,
            0.00990280,
            0.00409632,
            0.00652547,
            0.00217505,
            0.00195163,
            0.01274449,
            0.01213516,
            0.02717067,
            0.02293662,
            0.00712953,
            0.00811051,
            0.01383178,
            0.02037067,
            0.03068992,
            0.02374747,
            0.02020952,
            0.01977157,
            0.03160744,
            0.04024612,
            0.04381027,
            0.03949241,
            0.01714475,
            0.01764459,
            0.05673104,
            0.09304789,
            0.05705200,
            0.06221421,
            0.02926385,
            0.03288210,
            0.06679574,
            0.25418868,
            0.45921877,
            0.42341309,
            0.01048868,
            0.01797532,
            0.08275328,
            0.26595568,
            0.32426329,
            0.31898043,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
            0.00000000,
        ],
    ]

    freq_points = [
        0.00000000,
        3.41024688,
        6.82049376,
        10.23074063,
        13.64098751,
        17.05123439,
        20.46148127,
        23.87172814,
        27.28197502,
        30.69222190,
    ]

    si_pbesol.mesh_numbers = [9, 9, 9]
    si_pbesol.init_phph_interaction()
    _, gammas = si_pbesol.run_imag_self_energy(
        si_pbesol.grid.grg2bzg[[1, 103]],
        [
            300,
        ],
        frequency_points=freq_points,
        scattering_event_class=scattering_class,
    )
    # for line in si_pbesol.gammas.reshape(-1, 6):
    #     print(("%10.8f, " * 6) % tuple(line))
    np.testing.assert_allclose(
        gammas_classes[scattering_class - 1],
        np.swapaxes(gammas, -1, -2).ravel(),
        rtol=0,
        atol=1e-2,
    )


def test_imag_self_energy_nacl_npoints(nacl_pbe: Phono3py):
    """Imaginary part of self energy spectrum of NaCl.

    * at 10 frequency points sampled uniformly.

    """
    freq_points_nacl = [
        0.0,
        1.63223063,
        3.26446125,
        4.89669188,
        6.5289225,
        8.16115313,
        9.79338375,
        11.42561438,
        13.057845,
        14.69007563,
    ]
    gammas_nacl = [
        0.00000000,
        0.00000000,
        0.00000000,
        0.00000000,
        0.00000000,
        0.00000000,
        0.03396688,
        0.03396688,
        0.00687452,
        0.21001764,
        0.21001764,
        0.12310439,
        0.00297385,
        0.00297385,
        0.00227915,
        0.10673763,
        0.10673763,
        0.06918881,
        0.01003326,
        0.01003326,
        0.00996780,
        0.03414868,
        0.03414868,
        0.02258494,
        0.04027592,
        0.04027592,
        0.03603612,
        0.57995646,
        0.57995646,
        0.39737731,
        0.12705253,
        0.12705253,
        0.09246595,
        0.88750309,
        0.88750309,
        0.60334780,
        0.29968747,
        0.29968747,
        0.14257862,
        0.22134950,
        0.22134950,
        0.09606896,
        0.03941985,
        0.03941985,
        0.01632766,
        0.00222574,
        0.00222574,
        0.00627294,
        0.00240808,
        0.00240808,
        0.00688951,
        0.00008074,
        0.00008074,
        0.00003641,
        0.00000000,
        0.00000000,
        0.00000000,
        0.00000000,
        0.00000000,
        0.00000000,
        0.00000000,
        0.00000000,
        0.00000000,
        0.00000000,
        0.00000000,
        0.00000000,
        0.02850846,
        0.09000833,
        0.19582553,
        0.13715943,
        0.19892888,
        0.14203618,
        0.00861856,
        0.02747203,
        0.05000735,
        0.04441740,
        0.11080545,
        0.04172184,
        0.00738182,
        0.01722875,
        0.03273830,
        0.04517923,
        0.02441539,
        0.03277688,
        0.03233818,
        0.08459289,
        0.19264167,
        0.11281266,
        0.45667245,
        0.18491212,
        0.10846241,
        0.47768641,
        1.04554356,
        0.64678566,
        0.83834225,
        0.61795504,
        0.19485590,
        0.43708391,
        0.24896003,
        0.35882984,
        0.30654914,
        0.22471014,
        0.03624311,
        0.13350831,
        0.12479592,
        0.06750776,
        0.02503182,
        0.04543786,
        0.00155614,
        0.01088453,
        0.00064712,
        0.00392933,
        0.00058749,
        0.00022448,
        0.00000000,
        0.00000000,
        0.00000000,
        0.00000000,
        0.00000000,
        0.00000000,
    ]
    nacl_pbe.mesh_numbers = [9, 9, 9]
    nacl_pbe.init_phph_interaction()
    _fpoints, _gammas = nacl_pbe.run_imag_self_energy(
        nacl_pbe.grid.grg2bzg[[1, 103]],
        [
            300,
        ],
        num_frequency_points=10,
    )
    # for line in np.swapaxes(_gammas, -1, -2).ravel().reshape(-1, 6):
    #     print(("%10.8f, " * 6) % tuple(line))
    # print(_fpoints.ravel())
    np.testing.assert_allclose(
        gammas_nacl, np.swapaxes(_gammas, -1, -2).ravel(), rtol=0, atol=2e-2
    )
    np.testing.assert_allclose(freq_points_nacl, _fpoints.ravel(), rtol=0, atol=1e-5)


def test_imag_self_energy_nacl_nac_npoints(nacl_pbe: Phono3py):
    """Imaginary part of self energy spectrum of NaCl.

    * at 10 frequency points sampled uniformly.
    * at q->0

    """
    freq_points_nacl_nac = [
        0.0,
        1.63223063,
        3.26446125,
        4.89669188,
        6.5289225,
        8.16115313,
        9.79338375,
        11.42561438,
        13.057845,
        14.69007563,
    ]
    gammas_nacl_nac = [
        0.00000000,
        0.00000000,
        0.00000000,
        0.00000000,
        0.00000000,
        0.00000000,
        0.00000000,
        0.00000000,
        0.00000000,
        0.20482566,
        0.20482566,
        0.12447648,
        0.00000000,
        0.00000000,
        0.00000000,
        0.10819754,
        0.10819754,
        0.06679962,
        0.00000000,
        0.00000000,
        0.00000000,
        0.03735364,
        0.03735364,
        0.02305203,
        0.00000000,
        0.00000000,
        0.00000000,
        0.69026924,
        0.69026924,
        0.42880009,
        0.00000000,
        0.00000000,
        0.00000000,
        1.05462484,
        1.05462484,
        0.64579913,
        0.00000000,
        0.00000000,
        0.00000000,
        0.24280747,
        0.24280747,
        0.15052565,
        0.00000000,
        0.00000000,
        0.00000000,
        0.00013397,
        0.00013397,
        0.00008461,
        0.00000000,
        0.00000000,
        0.00000000,
        0.00000000,
        0.00000000,
        0.00000000,
        0.00000000,
        0.00000000,
        0.00000000,
        0.00000000,
        0.00000000,
        0.00000000,
    ]

    nacl_pbe.mesh_numbers = [9, 9, 9]
    nacl_pbe.init_phph_interaction(nac_q_direction=[1, 0, 0])
    _fpoints, _gammas = nacl_pbe.run_imag_self_energy(
        [nacl_pbe.grid.gp_Gamma], [300], num_frequency_points=10
    )
    # for line in np.swapaxes(_gammas, -1, -2).ravel().reshape(-1, 6):
    #     print(("%10.8f, " * 6) % tuple(line))
    # print(_fpoints.ravel())
    np.testing.assert_allclose(
        freq_points_nacl_nac, _fpoints.ravel(), rtol=0, atol=1e-5
    )
    np.testing.assert_allclose(
        gammas_nacl_nac, np.swapaxes(_gammas, -1, -2).ravel(), rtol=0, atol=2e-2
    )
